/*
 * Copyright (C) 2020 Rhonda Software.
 * All rights reserved.
 */

/////////////////////////////////////////////////////////////

#include "PlotHistogram.h"

/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////

//

/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////

CPlotHistogram::CPlotHistogram()
{
    m_histogram = new QwtPlotHistogram();
}

/////////////////////////////////////////////////////////////

void CPlotHistogram::SetTitle ( QString title )
{
    m_histogram->setTitle( title );
}

/////////////////////////////////////////////////////////////

void CPlotHistogram::SetSamples ( QVector< CIntervalSample > samples)
{
    QVector<QwtIntervalSample> vector;

    for(int i = 0; i < samples.size(); i++)
        vector.push_back( *samples.at(i).ToQwtIntervalSample() );

    m_histogram->setSamples( vector );
}

/////////////////////////////////////////////////////////////

void CPlotHistogram::SetPen (const QPen &pen)
{
    m_histogram->setPen( pen );
}

/////////////////////////////////////////////////////////////

void CPlotHistogram::SetBrush (const QBrush &brush )
{
    m_histogram->setBrush( brush );
}

/////////////////////////////////////////////////////////////

void CPlotHistogram::SetStyle (ECurveStyle style )
{
    m_histogram->setStyle( QwtPlotHistogram::HistogramStyle(style) );
}

/////////////////////////////////////////////////////////////

void CPlotHistogram::Attach( IDiagram *diagram )
{
    m_histogram->attach( diagram->SetParent() );
}

/////////////////////////////////////////////////////////////

CPlotHistogram::~CPlotHistogram()
{
    delete [] m_histogram;
}
